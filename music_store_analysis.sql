show databases;
use music_database;
show tables;



-- 1) Total revenue generated by the store? 
select * from track;

select sum(unit_price) as total_revenue
from track;

-- 2) Top 5 senior most employees based on job title?
select * from employee;

select title, first_name, last_name
from employee
order by levels desc
limit 5

-- 3) Return all albums along with their corresponding artists:
select * from album2;
select * from artist;

select a.title as album_title, ar.name as artist_name
from album2 a
join artist ar on a.artist_id = ar.artist_id;


-- 4) Find all playlists and the number of tracks in each playlist:
select * from playlist;
select * from playlist_track;

select p.playlist_id, p.name as playlist_name, COUNT(pt.track_id) as track_count
from playlist p
left join playlist_track pt on p.playlist_id = pt.playlist_id
group by p.playlist_id, p.name;

-- 5)  Which countries have the most Invoices?
select * from invoice;

select count(*) as c, billing_country 
FROM invoice
group by billing_country
order by c desc


-- 6) Return all the track names that have a song length longer than the average song length.
select * from track;

select name,miliseconds
from track
where miliseconds > (
	select avg(miliseconds) as avg_track_length
	from track )
order by miliseconds desc;


-- 7) Write query to return the email, first name, last name, & Genre of all Rock Music listeners and sort by email 
select * from invoice;
select * from invoice_line;
select * from customer;


select distinct email,first_name, last_name
from customer
join invoice on customer.customer_id = invoice.customer_id
join invoice_line on invoice.invoice_id = invoice_line.invoice_id
where track_id in(
	select track_id from track
	join on track.genre_id = genre.genre_id
	where genre.name like 'Rock'
)
order by email;

